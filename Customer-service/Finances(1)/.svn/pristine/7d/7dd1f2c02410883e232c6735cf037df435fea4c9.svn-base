package com.p2p.controller.front;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.p2p.pojo.Bank;
import com.p2p.pojo.IdCard;
import com.p2p.pojo.User;
import com.p2p.pojo.Userbackcard;
import com.p2p.pojo.Userinfo;
import com.p2p.pojo.Users;
import com.p2p.service.front.IUserService;
import com.p2p.service.front.IdCardService;
import com.p2p.service.front.UserInfoService;
import com.p2p.service.front.UserbackcardService;
import com.p2p.util.BankUtil;
import com.p2p.util.DateUtils;
import com.p2p.util.SendServiceUtil;

/**
 * 操作身份证  以及  银行卡Controller
 * 
 * @author  lxj
 * */
@Controller
@RequestMapping("idcard")
public class IdCardController {
	
	@Resource(name="idCardServiceImpl")
	private IdCardService idCardService;
	
	@Resource(name="userbackcardServiceImpl") 
	private UserbackcardService userbackcardService;
	
	@Resource(name="userInfoServiceImpl")
	private UserInfoService userInfoService;
	@Resource(name="IUserServiceImpl")
	private IUserService iUserService;
	
	/**
	 * 添加(修改)身份证信息
	 * */
	@RequestMapping("/addinfo")
	@ResponseBody
	public int addInfo(IdCard idCard,HttpSession session) {
		int count = 0;
		try {
			if(idCard.getIcid()==null) {
				idCard.setIcstarttime(DateUtils.getDateTimeFormat(new Date()));
				idCard.setIcstatus(1);
				count = idCardService.addModel(idCard);
				count = 1;
			}else {
				idCard.setIcstatus(1);
				count = idCardService.update(idCard);
				count = 2;
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		return count;
	}
	
	/**
	 * 获取银行卡所属类型
	 * @throws JsonProcessingException 
	 * */
	@RequestMapping("/getCardType")
	@ResponseBody
	public String getCardType(@RequestParam String ubbackcardnum) throws JsonProcessingException {
		ObjectMapper mapper = new ObjectMapper(); 
		Map<String, Object> map = new HashMap<String, Object>();
		
		String type = BankUtil.getNameOfBank(ubbackcardnum);
		if(type!="") {
			map.put("status",1);
			map.put("type",type);
		}
		String result = mapper.writeValueAsString(map);
		return result;
	}
	
	/**
	 * 添加银行卡(需要与服务端连接)
	 * */
	@RequestMapping("/addbackcard")
	@ResponseBody
	public int addBankCard(Userbackcard userback) {
		int addCard = 0;
		Integer uiid = userback.getUiid();
		try {
			if(uiid!=null) {
				//客服端银行卡设值
				Userbackcard bank = new Userbackcard();
				bank.setUiid(uiid);
				bank.setUbbackcardnum(userback.getUbbackcardnum());
				bank.setUbplaceback(userback.getUbplaceback());
				bank.setUbbindtime(DateUtils.getDateTimeFormat(new Date()));
				bank.setUbstatus(1);
				bank.setUbmoney(100000.00);
				
				//获取客服端用户基本信息表、身份证表、用户表中字段信息
				Userinfo userinfo = new Userinfo();
				userinfo.setUiid(uiid);
				Userinfo userinfos = userInfoService.getModel(userinfo);
				IdCard idcard = userinfos.getIdCard();
				User user = new User();
				user.setUid(userinfos.getUid());
				User us = iUserService.getModel(user);
				
				//服务端用户表设值
				Users users = new Users();
				users.setSuid(userinfos.getUiid());
				users.setSuusername(userinfos.getUiname());
				users.setSuname(idcard.getIcname());
				users.setSuphone(us.getUphone());
				users.setSucard(idcard.getIcnumber());
				users.setSuemail(userinfos.getUiemail());
				users.setSumoney(bank.getUbmoney());
				users.setSucredit(us.getUcredit());
				
				//向服务端传递对象(url是服务端地址)
				int usercount = SendServiceUtil.list(users, "192.168.90.47:8080/ServiceP2p/user/add");
				
				//服务端银行卡设值
				Bank banks = new Bank();
				banks.setBsuid(bank.getUiid());
				banks.setBcode(bank.getUbbackcardnum());
				banks.setBtype(bank.getUbplaceback());
				banks.setBmoney(bank.getUbmoney());
				banks.setBstate(bank.getUbstatus());
				
				int bankcount = SendServiceUtil.list(banks, "192.168.90.47:8080/ServiceP2p/bank/add");
				
				//当服务端开通成功后才可以成功开户
				if(usercount==1 && bankcount==1) {
					addCard = userbackcardService.addModel(bank);
					
					Userinfo userinfo1 = new Userinfo();
					userinfo1.setUiid(uiid);
					userinfo1.setUiopenstatus(1);
					userInfoService.update(userinfo1);
					
					addCard = 1;
				}
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		return addCard;
	}
	
	/**
	 * 开户成功后需跳转的页面
	 * */
	@RequestMapping(value="/opensuccess")
	public String openCustody() {
		return "views/front/open_success";
	}
}
